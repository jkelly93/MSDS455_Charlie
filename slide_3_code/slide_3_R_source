#install.packages("ggplot2")
install.packages("tidyverse")
install.packages("ggthemes")
#library(ggplot2)
library(tidyverse)
library(ggthemes)
install.packages("extrafont")
library(extrafont)

# A) FONTS ====
font_import()
fonts()
# This will show more detailed information about fonts
fonttable()
# ++++++++++++++++++++++++++++


# 1. Colors ####

pal_heart <- c("#FF8A80", "#D50000", "#FF1744",  "#FF5252", "#B71C1C","#7f0000")
blue_heart <- "#3F69AA"

scale_fill_heart <- function(){
  structure(list(
    scale_fill_manual(values = pal_heart)
  ))
}

scale_color_discrete_heart <- function(){
  structure(list(
    scale_color_manual(values = pal_heart)
  ))
}

scale_color_continuous_heart <- function(){
  structure(list(
    scale_color_gradientn(colours = pal_heart)
  ))
}
# 2. Themes #####

theme_heart <- function(base_size = 20, base_family = "Helvetica",
                        base_line_size = base_size / 42,
                        base_rect_size = base_size / 42) {
  # Starts with theme_bw and remove most parts
  theme_bw(
    base_size = base_size,
    base_family = base_family,
    base_line_size = base_line_size,
    base_rect_size = base_rect_size
  ) %+replace%
    theme(
      axis.ticks      = element_blank(),
      axis.text       = element_text(size = 16,color = blue_heart),
      axis.title = element_text(color = blue_heart),
      legend.background = element_blank(),
      legend.key        = element_blank(),
      legend.title = element_blank(),
      panel.background   = element_blank(),
      panel.border      = element_blank(),
      strip.background  = element_blank(),
      plot.title = element_text(color = blue_heart, face = "bold"),
      plot.background   = element_blank(),
      
      complete = TRUE
    )
}
# 3. Data Manipulation ####

cause_data = read.csv("leading_causes_death_us_2016.csv", header = TRUE,
                      stringsAsFactors = FALSE)

cause_80_16_data = read.csv("Cause_80_16.csv", header = TRUE,
                            stringsAsFactors = FALSE)
names(cause_data) = c("causes", "deaths")
cause_data.1 = cause_data[1:10, ]
cause_data.1$causes = factor(cause_data.1$causes)
levels(cause_data.2$causes)
# [1] "Accidents (unintentional injuries)"          "Alzheimer`s disease"                         "Cerebrovascular diseases"                   
# [4] "Chronic lower respiratory diseases"          "Diabetes mellitus"                           "Heart disease"                              
# [7] "Influenza and pneumonia"                     "Intentional self-harm (suicide)"             "Malignant neoplasms"                        
# [10] "Nephritis, nephrotic syndrome and nephrosis"

# cause_data.2$causes = factor(cause_data.1$causes, 
#                       levels = cause_data.1$causes[order(cause_data.1$deaths)])
# [1] "Nephritis, nephrotic syndrome and nephrosis" "Influenza and pneumonia"                     "Intentional self-harm (suicide)"            
# [4] "Diabetes mellitus"                           "Alzheimer`s disease"                         "Cerebrovascular diseases"                   
# [7] "Chronic lower respiratory diseases"          "Accidents (unintentional injuries)"          "Malignant neoplasms"                        
# [10] "Heart disease"
# THE ABOVE SORTED FROM LOWEST TO HIGHEST, I WANT TO GO FROM HIGHEST TO LOWEST

cause_data.2$causes = factor(cause_data.1$causes, 
                             levels = cause_data.1[order(cause_data.2$deaths, decreasing = TRUE), "causes"])
# levels(cause_data.2$causes)
# [1] "Heart disease"                               "Malignant neoplasms"                         "Accidents (unintentional injuries)"         
# [4] "Chronic lower respiratory diseases"          "Cerebrovascular diseases"                    "Alzheimer`s disease"                        
# [7] "Diabetes mellitus"                           "Influenza and pneumonia"                     "Intentional self-harm (suicide)"            
# [10] "Nephritis, nephrotic syndrome and nephrosis"

#I arrnged the factors in the order I want, but then
# coord_flip() does away with that by reversing the order
# , so I have to add the scale_x_discrete
# to flip back to the order I want
#

plot2 = ggplot(cause_data.2, aes(x = causes,y = deaths)) +
  geom_bar(stat = "identity") +
  coord_flip() +  
  scale_x_discrete(limits = rev(levels(cause_data.2$causes)))
#+
# theme_heart()
print(plot2)

# 4. CREATE PDF PLOT ======
# pdf("slide3.pdf", height = 5, width = 5)
# graphics.off()
